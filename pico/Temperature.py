class Temperature:
    #   compensation is a Dict[str, Dict[int, float]]:
    #   key is the address of the sensor, the value a dict with int sensor temperature and float compensation
    _compensation = {
        '284f8795f0013ce1': {0: 0.152, 1: 0.152, 2: 0.152, 3: 0.152, 4: 0.152, 5: 0.152, 6: 0.257, 7: 0.331, 8: 0.463,
                             9: 0.594, 10: 0.506, 11: 0.375, 12: 0.6, 13: 0.156, 14: 0.071, 15: 0.094, 16: 0.135,
                             17: 0.188, 18: 0.281, 19: 0.016, 20: 0.594, 21: 0.844, 22: 1.006, 23: 1.167, 24: 0.729,
                             25: 0.393, 26: 0.475, 27: 0.498, 28: 0.609, 29: 0.42, },
        '288e8395f0013c56': {0: -0.356, 1: -0.356, 2: -0.356, 3: -0.356, 4: -0.356, 5: -0.444, 6: -0.562, 7: -0.742,
                             8: -0.922, 9: -0.903, 10: -1.0, 11: -0.7, 12: -0.379, 13: -0.357, 14: -0.359, 15: -0.354,
                             16: -0.354, 17: -0.406, 18: -0.094, 19: -0.625, 20: -0.781, 21: -0.771, 22: -0.719,
                             23: -0.51, 24: -0.411, 25: -0.405, 26: -0.41, 27: -0.437, 28: -0.352, 29: -0.424, },
        '28b34c95f0013cbc': {0: 0.452, 1: 0.452, 2: 0.452, 3: 0.452, 4: 0.452, 5: 0.452, 6: 0.382, 7: 0.537, 8: 0.597,
                             9: 0.656, 10: 0.642, 11: 0.562, 12: 0.412, 13: 0.353, 14: 0.339, 15: 0.32, 16: 0.286,
                             17: 0.229, 18: 0.281, 19: 0.114, 20: 0.156, 21: -0.083, 22: -0.156, 23: -0.031, 24: -0.001,
                             25: -0.042, 26: -0.065, 27: -0.131, 28: -0.123, 29: -0.071, },
        '28e97895f0013cc6': {0: -0.226, 1: -0.226, 2: -0.226, 3: -0.226, 4: -0.226, 5: -0.312, 6: -0.287, 7: -0.284,
                             8: -0.281, 9: -0.233, 10: -0.273, 11: -0.312, 12: -0.17, 13: -0.062, 14: -0.031,
                             15: -0.036, 16: -0.042, 17: -0.094, 18: -0.044, 19: -0.125, 20: -0.156, 21: -0.271,
                             22: -0.344, 23: -0.193, 24: -0.107, 25: -0.022, 26: -0.029, 27: -0.035, 28: 0.0,
                             29: 0.035, },

    }

    def get(self, address: str, temp: float):
        if address in self._compensation:
            key = int(round(temp, 0))
            compensations = self._compensation[address]
            if key in compensations:
                return temp - compensations[key]
        return temp
